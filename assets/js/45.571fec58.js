(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{254:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"common-problems"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-problems"}},[s._v("#")]),s._v(" Common Problems")]),s._v(" "),e("h2",{attrs:{id:"problem-1-my-validator-has-voting-power-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#problem-1-my-validator-has-voting-power-0"}},[s._v("#")]),s._v(" Problem #1: My validator has "),e("code",[s._v("voting_power: 0")])]),s._v(" "),e("p",[s._v("Your validator has become jailed. Validators get jailed, i.e. get removed from the active validator set, if they do not vote on "),e("code",[s._v("500")]),s._v(" of the last "),e("code",[s._v("10000")]),s._v(" blocks, or if they double sign.")]),s._v(" "),e("p",[s._v("If you got jailed for downtime, you can get your voting power back to your validator. First, if "),e("code",[s._v("desmosd")]),s._v(" is not running, start it up again:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmosd start\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Wait for your full node to catch up to the latest block. Then, you can "),e("a",{attrs:{href:"#unjail-validator"}},[s._v("unjail your validator")])]),s._v(" "),e("p",[s._v("Lastly, check your validator again to see if your voting power is back.")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli status\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("You may notice that your voting power is less than it used to be. That's because you got slashed for downtime!")]),s._v(" "),e("h2",{attrs:{id:"problem-2-my-desmosd-crashes-because-of-too-many-open-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#problem-2-my-desmosd-crashes-because-of-too-many-open-files"}},[s._v("#")]),s._v(" Problem #2: My "),e("code",[s._v("desmosd")]),s._v(" crashes because of "),e("code",[s._v("too many open files")])]),s._v(" "),e("p",[s._v("The default number of files Linux can open (per-process) is "),e("code",[s._v("1024")]),s._v(". "),e("code",[s._v("desmosd")]),s._v(" is known to open more than "),e("code",[s._v("1024")]),s._v(" files. This causes the process to crash. A quick fix is to run "),e("code",[s._v("ulimit -n 4096")]),s._v(" (increase the number of open files allowed) and then restart the process with "),e("code",[s._v("desmosd start")]),s._v(". If you are using "),e("code",[s._v("systemd")]),s._v(" or another process manager to launch "),e("code",[s._v("desmosd")]),s._v(" this may require some configuration at that level. A sample "),e("code",[s._v("systemd")]),s._v(" file to fix this issue is below:")]),s._v(" "),e("div",{staticClass:"language-toml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/systemd/system/desmosd.service")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[s._v("Unit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("Description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("Desmos Full Node\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("After")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("network"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[s._v("Service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("Type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("simple\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("User")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("ubuntu "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is the user that running the software in the background. Change it to your username if needed.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("WorkingDirectory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("/home/ubuntu "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is the home directory of the user that running the software in the background. Change it to your username if needed.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("ExecStart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("/home/ubuntu/go/bin/desmosd start "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The path should point to the correct location of the software you have installed.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("Restart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("on-failure\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("RestartSec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("LimitNOFILE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# To compensate the "Too many open files" issue.')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[s._v("Install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[s._v("WantedBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("multi-user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h2",{attrs:{id:"problem-3-my-validator-is-inactive-unbonding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#problem-3-my-validator-is-inactive-unbonding"}},[s._v("#")]),s._v(" Problem #3: My validator is inactive/unbonding")]),s._v(" "),e("p",[s._v("When creating a validator you have the minimum self delegation amount using the "),e("code",[s._v("--min-self-delegation")]),s._v(" flag. What this means is that if your validator has less than that specific value of tokens seldelegated, it will automatically enter the unbonding state and then be marked as inactive.")]),s._v(" "),e("p",[s._v("To solve this, what you can do is getting more tokens delegated to it by following these steps:")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Get your address:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli keys show "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --address\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Require more tokens using the "),e("a",{attrs:{href:"https://faucet.desmos.network",target:"_blank",rel:"noopener noreferrer"}},[s._v("faucet"),e("OutboundLink")],1),s._v(".")])]),s._v(" "),e("li",[e("p",[s._v("Make sure the tokens have been sent properly:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli query account "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("desmoscli keys show "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --address"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" --chain-id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("chain_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Delegate the tokens to your validator:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli tx staking delegate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("desmoscli keys show "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --bech"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("val --address"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("amount"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --chain-id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("chain_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --from "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --yes\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# desmoscli tx staking delegate \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  $(desmoscli keys show validator --bech=val --address) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  10000000udaric \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  --chain-id morpheus-1001 \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  --from validator --yes")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"problem-4-my-validator-is-jailed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#problem-4-my-validator-is-jailed"}},[s._v("#")]),s._v(" Problem #4: My validator is jailed")]),s._v(" "),e("p",[s._v("If your validator is jailed it probably means that it have been inactive for a log period of time missing a consistent number of blocks. We suggest you checking the Desmos daemon status to make sure it hasn't been interrupted by some error.")]),s._v(" "),e("p",[s._v("If your service is running properly, you can also try and reset your "),e("code",[s._v("desmoscli")]),s._v(" configuration by running the following command:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.desmoscli/config/config.toml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("After doing so, remember to restart your validator service to apply the changes.")]),s._v(" "),e("p",[s._v("Once you have fixed the problems, you can unjail your validator by executing the following command:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli tx slashing unjail --chain-id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("chain_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --from "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_key"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# desmoscli tx slashing unjail --chain-id morpheus-1001 --from validator")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("This will perform an unjail transaction that will set your validator as active again from the next block.")]),s._v(" "),e("p",[s._v("If the problem still persists, please make sure you have "),e("a",{attrs:{href:"#problem-3-my-validator-is-inactiveunbonding"}},[s._v("enough tokens delegated to your validator")]),s._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);