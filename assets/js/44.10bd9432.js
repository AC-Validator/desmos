(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{399:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"manual-full-node-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manual-full-node-setup"}},[t._v("#")]),t._v(" Manual full node setup")]),t._v(" "),s("p",[t._v("Following you will find the instructions on how to manually setup your Desmos full node.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Requirements")]),t._v(" "),s("p",[t._v("Before starting, make sure you read the "),s("RouterLink",{attrs:{to:"/fullnode/overview.html"}},[t._v("overview")]),t._v(" to make sure your hardware meets the needed\nrequirements.")],1)]),t._v(" "),s("h2",{attrs:{id:"_1-build-the-software"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-build-the-software"}},[t._v("#")]),t._v(" 1. Build the software")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Choose your DB backend")]),t._v(" "),s("p",[t._v("Before installing the software, a consideration must be done.")]),t._v(" "),s("p",[t._v("By default, Desmos uses "),s("a",{attrs:{href:"https://github.com/google/leveldb",target:"_blank",rel:"noopener noreferrer"}},[t._v("LevelDB"),s("OutboundLink")],1),t._v(" as its database backend engine. However, since\nversion "),s("code",[t._v("v0.6.0")]),t._v(" we've also added the possibility of optionally\nusing "),s("a",{attrs:{href:"https://github.com/facebook/rocksdb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Facebook's RocksDB"),s("OutboundLink")],1),t._v(", which, although still being experimental, is know to be\nfaster and could lead to lower syncing times. If you want to try out RocksDB (which we suggest you to do) you can take a\nlook at our "),s("RouterLink",{attrs:{to:"/fullnode/rocksdb-installation.html"}},[t._v("RocksDB installation guide")]),t._v(" before proceeding further.")],1)]),t._v(" "),s("p",[t._v("The following operations will all be done in the terminal environment under your home directory.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clone the Desmos software")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/desmos-labs/desmos.git "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" desmos\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checkout the correct commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please check on https://github.com/desmos-labs/morpheus to get")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the tag to use based on the current network version")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tags/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build the software")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you want to use the default database backend run ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you want to use RocksDB run instead")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DB_BACKEND")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rocksdb \n")])])]),s("p",[t._v("If the software is built successfully, the "),s("code",[t._v("desmos")]),t._v(" executable will be located inside your "),s("code",[t._v("$GOBIN")]),t._v(" path. If you setup\nyour environment variables correctly in the previous step, you should also be able to run it properly. To check this,\ntry running:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("desmos version --long\n")])])]),s("h2",{attrs:{id:"_2-initialize-the-desmos-working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-initialize-the-desmos-working-directory"}},[t._v("#")]),t._v(" 2. Initialize the Desmos working directory")]),t._v(" "),s("p",[t._v("Configuration files and chain data will be stored inside the "),s("code",[t._v("$HOME/.desmos")]),t._v(" directory by default.")]),t._v(" "),s("p",[t._v("We can create this folder and all the necessary data by initializing a new fullnode. To do this, run:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize the working environment for Desmos")]),t._v("\ndesmos init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your_moniker"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("You can choose any moniker your like. It will be saved in the "),s("code",[t._v("config.toml")]),t._v(" under the "),s("code",[t._v(".desmos")]),t._v(" working directory.")]),t._v(" "),s("h3",{attrs:{id:"recovering-a-previous-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recovering-a-previous-node"}},[t._v("#")]),t._v(" Recovering a previous node")]),t._v(" "),s("p",[t._v("Starting from "),s("code",[t._v("v0.15.0")]),t._v(", you are now able to provide a custom seed when initializing your node. This will be\nparticularly useful because, in the case that you want to reset your node, you will be able to re-generate the same\nprivate node key instead of having to create a new node.")]),t._v(" "),s("p",[t._v("In order to provide a custom seed to your private key, you can do as follows:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Get a new random seed by running")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("desmos keys "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" node --dry-run\n")])])]),s("p",[t._v("This will create a new key "),s("strong",[t._v("without")]),t._v(" adding it to your keystore, and output the underlying seed.")])]),t._v(" "),s("li",[s("p",[t._v("Copy the above provided seed, and then pass it to the "),s("code",[t._v("init")]),t._v(" command using the "),s("code",[t._v("--recover")]),t._v(" flag:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("desmos init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your_moniker"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --recover "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your_mnemonic_phrase>"')]),t._v("\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Recovering a node")]),t._v(" "),s("p",[t._v("If you already have a seed, you can directly use the "),s("code",[t._v("--recover")]),t._v(" flag without generating a new one. This will recover\nthe private key associated to that seed.")])]),t._v(" "),s("h2",{attrs:{id:"_3-get-the-genesis-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-get-the-genesis-file"}},[t._v("#")]),t._v(" 3. Get the genesis file")]),t._v(" "),s("p",[t._v("To connect to an existing network, or start a new one, a genesis file is required. The file contains all the settings\ntelling how the genesis block of the network should look like. To connect to the "),s("code",[t._v("morpheus")]),t._v(" testnets, you will need the\ncorresponding genesis file of each testnet. Visit the "),s("a",{attrs:{href:"https://github.com/desmos-labs/morpheus",target:"_blank",rel:"noopener noreferrer"}},[t._v("testnet repo"),s("OutboundLink")],1),t._v(" and\ndownload the correct genesis file by running the following command.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Download the existing genesis file for the testnet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace <chain-id> with the id of the testnet you would like to join")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://raw.githubusercontent.com/desmos-labs/morpheus/master/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/genesis.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.desmos/config/genesis.json\n")])])]),s("h2",{attrs:{id:"_4-setup-seeds-peers-and-state-sync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-setup-seeds-peers-and-state-sync"}},[t._v("#")]),t._v(" 4. Setup seeds, peers and state sync")]),t._v(" "),s("p",[t._v("The next thing you have to do now is telling your node how to connect with other nodes that are already present on the\nnetwork. In order to do so, we will use the "),s("code",[t._v("seeds")]),t._v(" and "),s("code",[t._v("persistent_peers")]),t._v(" values of the "),s("code",[t._v("~/.desmos/config/config.toml")]),t._v("\nfile.")]),t._v(" "),s("p",[t._v("Seed nodes are a particular type of nodes present on the network. Your fullnode will connect to them, and they will\nprovide it with a list of other fullnodes that are present on the network. Then, your fullnode will automatically\nconnect to such nodes. Our team is running three seed nodes, and we advise you to use them by setting the\nfollowing "),s("code",[t._v("seeds")]),t._v(" value:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("seeds")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"be3db0fe5ee7f764902dbcc75126a2e082cbf00c@seed-1.morpheus.desmos.network:26656,4659ab47eef540e99c3ee4009ecbe3fbf4e3eaff@seed-2.morpheus.desmos.network:26656,1d9cc23eedb2d812d30d99ed12d5c5f21ff40c23@seed-3.morpheus.desmos.network:26656"')]),t._v("\n")])])]),s("p",[t._v("Next, you will need to set some persistent peers of your node. Such nodes are going to be a particular type of peer\nnodes to which your fullnode will always try to connect. You need to set them as the following value so that your node\ncan start syncing faster with the rest of the chain:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("persistent_peers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"67dcef828fc2be3c3bcc19c9542d2b228bd7cff9@seed-4.morpheus.desmos.network:26656,fcf8207fb84a7238089bd0cd8db994e0af9016b6@seed-5.morpheus.desmos.network:26656"')]),t._v("\n")])])]),s("h3",{attrs:{id:"using-state-sync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-state-sync"}},[t._v("#")]),t._v(" Using state sync")]),t._v(" "),s("p",[t._v("Starting from Desmos "),s("code",[t._v("v0.15.0")]),t._v(", we've added the support for Tendermint'\ns "),s("a",{attrs:{href:"https://docs.tendermint.com/master/tendermint-core/state-sync.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("state sync"),s("OutboundLink")],1),t._v(". This feature allows new nodes to\nsync with the chain extremely fast, by downloading snapshots created by other full nodes.")]),t._v(" "),s("p",[t._v("In order to use this feature, you will have to edit a couple of things inside your "),s("code",[t._v("~/.desmos/config/config.toml")]),t._v(" file,\nunder the "),s("code",[t._v("statesync")]),t._v(" section:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Enable state sync by setting "),s("code",[t._v("enable = true")])])]),t._v(" "),s("li",[s("p",[t._v("Set the RPC addresses from where to get the snapshosts\nto "),s("code",[t._v("seed-4.morpheus.desmos.network:26657,seed-5.morpheus.desmos.network:26657")]),t._v("."),s("br"),t._v("\nThese are two of our fullnodes that are set up to create periodic snapshots every 600 blocks.")])]),t._v(" "),s("li",[s("p",[t._v("Get a trusted chain height, and the associated block hash. To do this, you will have to:")]),t._v(" "),s("ol",[s("li",[t._v("Get the current chain height by running:"),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s http://seed-4.morpheus.desmos.network:26657/commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{height: .result.signed_header.header.height}"')]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Once you have the current chain height, get a height that is a little bit lower (200 blocks) than the current one.\nTo do this you can execute:"),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s http://seed-4.morpheus.desmos.network:26657/commit?height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{height: .result.signed_header.header.height, hash: .result.signed_header.commit.block_id.hash}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# curl -s http://seed-4.morpheus.desmos.network:26657/commit?height=100000 | jq "{height: .result.signed_header.header.height, hash: .result.signed_header.commit.block_id.hash}"')]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("Now that you have a trusted height and block hash, use those values as the "),s("code",[t._v("trust_height")]),t._v(" and "),s("code",[t._v("trust_hash")]),t._v(" values.")])])]),t._v(" "),s("p",[t._v("Here is an example of what the "),s("code",[t._v("statesync")]),t._v(" section of your "),s("code",[t._v("~/.desmos/config/config.toml")]),t._v(" file should look like in the\nend:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("enable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("rpc_servers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"seed-4.morpheus.desmos.network:26657,seed-5.morpheus.desmos.network:26657"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("trust_height")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16962")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("trust_hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"E8ED7A890A64986246EEB02D7D8C4A6D497E3B60C0CAFDDE30F2EE385204C314"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("trust_period")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"168h0m0s"')]),t._v("\n")])])]),s("h2",{attrs:{id:"optional-change-your-database-backend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-change-your-database-backend"}},[t._v("#")]),t._v(" (Optional) Change your database backend")]),t._v(" "),s("p",[t._v("If you would like to run your node using "),s("a",{attrs:{href:"https://github.com/facebook/rocksdb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Facebook's RocksDB"),s("OutboundLink")],1),t._v(" as the database\nbackend, and you have correctly built the Desmos binaries to work with it following the instructions\nat "),s("a",{attrs:{href:"#1-build-the-software"}},[t._v("point 1")]),t._v(", there is one more thing you need to do.")]),t._v(" "),s("p",[t._v("In order to tell Tendermint to use RocksDB as its database backend engine, you are required to change the following like\ninside the "),s("code",[t._v("config.toml")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("db_backend")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goleveldb"')]),t._v("\n")])])]),s("p",[t._v("To become")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("db_backend")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rocksdb"')]),t._v("\n")])])]),s("h2",{attrs:{id:"_5-open-the-proper-ports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-open-the-proper-ports"}},[t._v("#")]),t._v(" 5. Open the proper ports")]),t._v(" "),s("p",[t._v("Now that everything is in place to start the node, the last thing to do is to open up the proper ports.")]),t._v(" "),s("p",[t._v("Your node uses vary different ports to interact with the rest of the chain. Particularly, it relies on:")]),t._v(" "),s("ul",[s("li",[t._v("port "),s("code",[t._v("26656")]),t._v(" to listen for incoming connections from other nodes")]),t._v(" "),s("li",[t._v("port "),s("code",[t._v("26657")]),t._v(" to expose the RPC service to clients")])]),t._v(" "),s("p",[t._v("A part from those, it also uses:")]),t._v(" "),s("ul",[s("li",[t._v("port "),s("code",[t._v("9090")]),t._v(" to expose the "),s("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),s("OutboundLink")],1),t._v(" service that allows clients to query the chain state")]),t._v(" "),s("li",[t._v("port "),s("code",[t._v("1317")]),t._v(" to expose the REST APIs service")])]),t._v(" "),s("p",[t._v("Most of the validators do not have interest in opening any port. However, it might be beneficial to the whole chain if\nyou can open port "),s("code",[t._v("26656")]),t._v(". This would allow new nodes to connect to you as a peer, making their sync faster and the\nconnection more reliable. For this reason, we suggest you opening that port by using "),s("code",[t._v("ufw")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Accept connections to port 26656 from any address")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ufw allow from any to any port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26656")]),t._v(" proto tcp\n")])])]),s("p",[t._v("If you also want to run a gRPC server, RPC node or the REST APIs, you also need to remember to open the related ports as\nwell.")]),t._v(" "),s("h2",{attrs:{id:"_6-start-the-desmos-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-start-the-desmos-node"}},[t._v("#")]),t._v(" 6. Start the Desmos node")]),t._v(" "),s("p",[t._v("After setting up the binary and opening up ports, you are now finally ready to start your node:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Run Desmos full node")]),t._v("\ndesmos start\n")])])]),s("p",[t._v("The full node will connect to the peers and start syncing. You can check the status of the node by executing:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check status of the node")]),t._v("\ndesmos status\n")])])]),s("p",[t._v("You should see an output like the following one:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"node_info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"protocol_version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"p2p"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"block"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"app"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8307c16191e249d6d3871ce764262d40d9cf249f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"listen_addr"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp://0.0.0.0:26656"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"network"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"morpheus-1001"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.32.7"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"channels"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4020212223303800"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moniker"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Morpheus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"other"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tx_index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rpc_address"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp://0.0.0.0:26657"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sync_info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"latest_block_hash"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AAB066E5B020C325E5AE41CFACFB95DAC83B261D0C4A24439A66A2977A03B7EC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"latest_app_hash"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5B4CE89D3C1EFA1AE8E16710103EEAE1FDF9D13BE44F5847F5376810E8F39DAE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"latest_block_height"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"480950"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"latest_block_time"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-01-13T06:35:29.237599298Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"catching_up"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"validator_info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25AD49347EC88C1922F18B317D12EA59DB0EC8D6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pub_key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tendermint/PubKeyEd25519"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WPZGfRMuyd8X4B4vAx79yfyqH+nmEboaML8YlJKT/uE="')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"voting_power"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("If you see that the "),s("code",[t._v("catching_up")]),t._v(" value is "),s("code",[t._v("false")]),t._v(" under the "),s("code",[t._v("sync_info")]),t._v(", it means that you are fully synced. If it\nis "),s("code",[t._v("true")]),t._v(", it means your node is still syncing.")]),t._v(" "),s("p",[t._v("After your node is fully synced, you can consider running your full node as a "),s("RouterLink",{attrs:{to:"/validators/setup.html"}},[t._v("validator node")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"optional-configure-the-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-configure-the-service"}},[t._v("#")]),t._v(" (Optional) Configure the service")]),t._v(" "),s("p",[t._v("To allow your "),s("code",[t._v("desmos")]),t._v(" instance to run in the background as a service you need to execute the following command")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/systemd/system/desmosd.service "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF  \n[Unit]\nDescription=Desmos Full Node\nAfter=network-online.target\n\n[Service]\nUser=ubuntu\nExecStart="),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOBIN")]),t._v("/desmos start\nRestart=always\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("If you are logged as a user which is not "),s("code",[t._v("ubuntu")]),t._v(", make sure to edit the "),s("code",[t._v("User")]),t._v(" value accordingly")])]),t._v(" "),s("p",[t._v("Once you have successfully created the service, you need to enable it. You can do so by running")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" desmosd\n")])])]),s("p",[t._v("After this, you can run it by executing")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl start desmosd\n")])])]),s("h3",{attrs:{id:"service-operations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-operations"}},[t._v("#")]),t._v(" Service operations")]),t._v(" "),s("h4",{attrs:{id:"check-the-service-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-the-service-status"}},[t._v("#")]),t._v(" Check the service status")]),t._v(" "),s("p",[t._v("If you want to see if the service is running properly, you can execute")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl status desmosd\n")])])]),s("p",[t._v("If everything is running smoothly you should see something like")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ systemctl status desmosd\n● desmos.service - Desmos Node\n   Loaded: loaded "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/etc/systemd/system/desmosd.service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" enabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" vendor preset: \n   Active: active "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" since Fri "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-01-17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":23:12 CET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 2min 3s ago\n Main PID: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11318")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("desmos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Tasks: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("limit: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4419")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   CGroup: /system.slice/desmosd.service\n           └─11318 /root/go/bin/desmos start\n")])])]),s("h4",{attrs:{id:"check-the-node-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-the-node-status"}},[t._v("#")]),t._v(" Check the node status")]),t._v(" "),s("p",[t._v("If you want to see the current status of the node, you can do so by running")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("journalctl -u desmosd -f\n")])])]),s("h4",{attrs:{id:"stopping-the-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stopping-the-service"}},[t._v("#")]),t._v(" Stopping the service")]),t._v(" "),s("p",[t._v("If you wish to stop the service from running, you can do so by running")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl stop desmosd\n")])])]),s("p",[t._v("To check the successful stop, execute "),s("code",[t._v("systemctl status desmos")]),t._v(". This should return")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ systemctl status desmosd\n● desmos.service - Desmos Node\n   Loaded: loaded "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/etc/systemd/system/desmosd.service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" enabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" vendor preset: enabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   Active: failed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Result: exit-code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" since Fri "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-01-17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":28:04 CET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 3s ago\n  Process: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11318")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/go/bin/desmos start "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("exited, "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("143")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n Main PID: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11318")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("exited, "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("143")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);